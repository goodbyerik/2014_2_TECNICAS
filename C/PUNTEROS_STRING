int main(int argc, char *argv[]) {
	char cad1[]="abcd";
	//char es notación para CADENA DE CARACTERES
	//char es una variable "cadena" (string)
	char *cad2="efgh";
	//ahora *cad2 es un puntero, un key (pero con letras)
	printf("%s\n",cad1);
	//imprime el valor de variable cad1
	//el %s es para variable "STRING"
	printf("%s\n",cad2);
	//caso curioso
	//si se coloca *cad2, la función no corre (ERROR)
	//si se coloca cad2, la función si corre
	//CORRECCION LINEA_11; se trata como una variable.
	cad2=cad1;
	printf("el nuevo valor de cad2 %s\n",cad2);
	//esto dice que cad2 vale "abcd"
	//mismo resultado si cad2=&cad1, dado que cad2 es un puntero (*cad2)
	//es ERRONEO SI SE COLOCA *cad2="abc", esto es solo para var numericas
____CASO_2_
	int i;
	//variable "i" es un entero
	for (i=0;i<4;i++)
	//cada vez que se coloca un for/IF (algo iterativo)
	{//abrir siempre una llave, colocar un TAB
		printf("[%d]=%c----[%d]=%c\n",i,cad1[i],i,cad2[i]);
		//cad2 apunta a cad1, cambiando un valor a cad2
	}
	cad2[0]='X';
	printf("cambio en cad2\n");
	//impresión de cad1 y cad2
	for (i=0;i<4;i++)
	{
		printf("[%d]=%c----[%d]=%c\n",i,cad1[i],i,cad2[i]);
	}
	return 0;
}
---------------------------------
"todo"
int main(int argc, char *argv[]) {
	char cad1[]="abcd";
	//char es notación para CADENA DE CARACTERES
	//char es una variable "cadena" (string)
	char *cad2="efgh";
	//ahora *cad2 es un puntero, un key (pero con letras)

	printf("%s\n",cad1);
	//imprime el valor de variable cad1
	//el %s es para variable "STRING"
	printf("%s\n",cad2);
	//caso curioso
	//si se coloca *cad2, la función no corre (ERROR)
	//si se coloca cad2, la función si corre
	//CORRECCION LINEA_11; se trata como una variable.
	cad2=cad1;
	printf("el nuevo valor de cad2 %s\n",cad2);
	//esto dice que cad2 vale "abcd"
	//mismo resultado si cad2=&cad1, dado que cad2 es un puntero (*cad2)
	//es ERRONEO SI SE COLOCA *cad2="abc", esto es solo para var numericas
	int i;
	//variable "i" es un entero
	for (i=0;i<4;i++)
	//es importante el putno y coma
	//cada vez que se coloca un for/IF (algo iterativo)
	{//abrir siempre una llave, colocar un TAB
		printf("[%d]=%c----[%d]=%c\n",i,cad1[i],i,cad2[i]);
		//para lanzar la variable, se pone %d, osea es un print dinamico.
		//cad2 apunta a cad1, cambiando un valor a cad2
	}
	cad2[0]='X';
	printf("cambio en cad2\n");
	//impresión de cad1 y cad2
	for (i=0;i<4;i++)
	{
		printf("[%d]=%c----[%d]=%c\n",i,cad1[i],i,cad2[i]);
	}
	return 0;
}
_______
ultimo analisis
int main(int argc, char *argv[]) {
	//se quiere colocar una variable string
	char cad1[]="abcd";
	char *cad2="fghi";
	//el puntero es string por el char, dado que es el key no se tiene que establecer com lista[]
	printf("el valor de cad1 %s\n",cad1);
	printf("el valor de cad2 %s\n",cad2);
	//dado que quiero saber los elementos como si fuese un string
	//entonces defino contador
	int i;
	for (i=0;i<4;i++){
		//recuerda que siempre se separa entre ; y es menor a cuatro ya que hay 4 letras, 3 espacios
		//printf("la posicion de cad1[%d] es %c\n",i,cad1[i]);
		//printf("la posicion de cad2[%d] es %c\n",i,cad2[i]);
		//los cad, como son listas por [] entonces funcionan con cad[i]
		//en simultaneo
		printf("[%d]=%c---[%d]=%c\n",i,cad1[i],i,cad2[i]);
		//recuerda que texto unico es %c y numero integer es %s
	}
	//si quiero cambiar los valores
	//cad2=cad1;
	// esta mal decir cad1=cad2, dado que cad2 es un puntero, y una variable no es afectada por un puntero
	// aqui en cad2=cad1 se indica que el cambio simultaneo en cad1 y cad 2
	cad1[0]='X';
	//texto solo es el es entre comillas ''
	//el cad1 posicion zero ahora vale X	
	printf("cambio en cad2\n");
	//impresión de cad1 y cad2
	for (i=0;i<4;i++)
	{
		printf("valor nuevo de cad2 es [%d]--%c\n",i,cad1[i]);
		//respuesta, cad2 es igual a cad1 cuando se pone cad2=cad1
		//printf("[%d]=%c----[%d]=%c\n",i,cad1[i],i,cad2[i]);
	}
	return 0;
}
